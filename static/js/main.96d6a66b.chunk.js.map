{"version":3,"sources":["weatherInfo.tsx","apiKey.ts","vector/FeelsLike.svg","vector/Frame.svg","vector/Humidity.svg","vector/MaxTemp.svg","vector/MinTemp.svg","vector/Wind.svg","vector/settings.svg","SettingsPrompt.tsx","Loading.tsx","weatherForecast.tsx","UnitPicker.ts","searchBox.tsx","App.tsx","index.tsx"],"names":["WeatherInfo","weatherData","number","icon","type","unit","Math","ceil","round","motion","div","initial","opacity","scale","animate","layout","className","src","alt","apiKey","process","REACT_APP_APIkey","SettingsPrompt","visible","handleChange","changeCity","hideSettings","onChange","htmlFor","name","id","value","onClick","Loading","WeatherForecast","city","geoLocation","console","log","apiUri","useState","FeelsLike","MinTemp","MaxTemp","Humidity","Frame","Wind","forecast","setForecast","temperature","setTemperature","cityName","setCityName","description","setDescription","units","setUnits","setVisible","loading","setLoading","lat","lon","myApiKey","useEffect","fetch","then","response","json","main","feels_like","temp_min","temp_max","humidity","visibility","wind","speed","temp","weather","catch","alert","finally","temperatureDataObject","unitsArray","UnitPicker","temperatureData","settingsIcon","map","data","key","e","target","SearchBox","handleSearch","handleSubmit","onSubmit","App","location","setLocation","setCity","setVisibility","styleClass","setStyleClass","preventDefault","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96d6a66b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./weather-info.css\";\r\nimport IWeatherInfo from \"./interfaces/IWeatherInfo\";\r\n\r\n\r\nconst WeatherInfo = ({number, icon, type, unit}: IWeatherInfo) => {\r\n  let weatherData: number;\r\n  switch (unit) {\r\n    case \"°F\":\r\n      weatherData = Math.ceil(((number * (9/5)) + 32));\r\n      break;\r\n    case \"K\":\r\n      weatherData = Math.ceil(number + 273.15);\r\n      break;\r\n    case \"mph\":\r\n      weatherData = Math.round(number * 2.237);\r\n      break;\r\n    case \"km/h\":\r\n      weatherData = Math.round(number * 3.6);\r\n      break;\r\n    default:\r\n      weatherData = Math.ceil(number);\r\n      break;\r\n  }\r\n\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{\r\n        opacity: 0.1,\r\n        scale: 0.1\r\n      }}\r\n      animate={{\r\n        opacity: 1,\r\n        scale: 1\r\n      }}\r\n      layout\r\n      className=\"card\"\r\n    >\r\n      <img src={icon} alt=\"\"/>\r\n      <h3>{`${weatherData} ${unit}`}</h3>\r\n      <p>{type}</p>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default WeatherInfo;\r\n","const apiKey = process.env.REACT_APP_APIkey;\r\n\r\nexport default apiKey;\r\n","export default __webpack_public_path__ + \"static/media/FeelsLike.605b05b3.svg\";","export default __webpack_public_path__ + \"static/media/Frame.dd3d54bf.svg\";","export default __webpack_public_path__ + \"static/media/Humidity.dfc91c75.svg\";","export default __webpack_public_path__ + \"static/media/MaxTemp.6de19388.svg\";","export default __webpack_public_path__ + \"static/media/MinTemp.408e9342.svg\";","export default __webpack_public_path__ + \"static/media/Wind.311b79ff.svg\";","export default __webpack_public_path__ + \"static/media/settings.909daaf9.svg\";","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport ISettings from \"./interfaces/ISettings\";\r\nimport \"./settings-prompt.css\";\r\n\r\nconst SettingsPrompt = ({visible, handleChange, changeCity, hideSettings}: ISettings) => {\r\n  return (\r\n    <motion.div\r\n      initial={{\r\n        opacity: 0.1,\r\n        scale: 0.1\r\n      }}\r\n      animate={{\r\n        opacity: 1,\r\n        scale: 1\r\n      }}\r\n      layout\r\n      className={visible}\r\n      onChange={handleChange}\r\n    >\r\n      <h4>Settings</h4>\r\n      <p>Swap units</p>\r\n      <div>\r\n        <label htmlFor=\"metric-units\">Metric (°C)</label>\r\n        <input type=\"radio\" name=\"units\" id=\"metric-units\" value=\"metric\"  />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"imperial-units\">Imperial (°F)</label>\r\n        <input type=\"radio\" name=\"units\" id=\"imperial-units\" value=\"imperial\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"standard-units\">Standard (K)</label>\r\n        <input type=\"radio\" name=\"units\" id=\"standard-units\" value=\"standard\"/>\r\n      </div>\r\n\r\n      <button className=\"change\" onClick={changeCity}>Change city</button>\r\n      <button className=\"done\" onClick={hideSettings}>Done</button>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default SettingsPrompt\r\n","import React from \"react\";\r\nimport \"./Loading.css\";\r\n\r\nexport default function Loading() {\r\n  return(\r\n    <div className=\"ring\" />\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport WeatherInfo from \"./weatherInfo\";\r\nimport myApiKey from \"./apiKey\";\r\nimport IResponse from \"./interfaces/IResponse\";\r\nimport FeelsLike from \"./vector/FeelsLike.svg\";\r\nimport Frame from \"./vector/Frame.svg\";\r\nimport Humidity from \"./vector/Humidity.svg\";\r\nimport MaxTemp from \"./vector/MaxTemp.svg\";\r\nimport MinTemp from \"./vector/MinTemp.svg\";\r\nimport Wind from \"./vector/Wind.svg\";\r\nimport settingsIcon from \"./vector/settings.svg\";\r\nimport \"./weather-forecast.css\";\r\nimport IWeather from \"./interfaces/IWeather\";\r\nimport SettingsPrompt from \"./SettingsPrompt\";\r\nimport UnitPicker from \"./UnitPicker\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst WeatherForecast = ({city, geoLocation, changeCity}: IWeather) => {\r\n  console.log(city);\r\n  const [ forecast, setForecast ] = useState(\r\n    [\r\n      {\"data\": 0, \"icon\": FeelsLike, \"type\": \"Feels like\", \"key\": 0},\r\n      {\"data\": 0, \"icon\": MinTemp, \"type\": \"Min Temp.\", \"key\": 1},\r\n      {\"data\": 0, \"icon\": MaxTemp, \"type\": \"Max Temp.\", \"key\": 2},\r\n      {\"data\": 0, \"icon\": Humidity, \"type\": \"Humidity\", \"key\": 3},\r\n      {\"data\": 0, \"icon\": Frame, \"type\": \"Visibility\", \"key\": 4},\r\n      {\"data\": 0, \"icon\": Wind, \"type\": \"Wind\", \"key\": 5}\r\n    ]\r\n  );\r\n  const [ temperature, setTemperature ] = useState(0);\r\n  const [ cityName, setCityName ] = useState(\"\");\r\n  const [ description, setDescription ] = useState(\"\");\r\n  const [ units, setUnits ] = useState(\"metric\");\r\n  const [ visible, setVisible ] = useState(\"hidden\");\r\n  const [ loading, setLoading ] = useState(true);\r\n\r\n  let apiUri: string;\r\n\r\n  if(geoLocation.lat !== null && geoLocation.lon !== null) {\r\n    apiUri = `https://api.openweathermap.org/data/2.5/weather?lat=${geoLocation.lat}&lon=${geoLocation.lon}&appid=${myApiKey}&units=metric`;\r\n  } else {\r\n    apiUri = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${myApiKey}&units=metric`;\r\n  }\r\n\r\n  useEffect(() => {\r\n      fetch(apiUri)\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          const main: IResponse = response.main;\r\n          setForecast([\r\n            {\"data\": main.feels_like, \"icon\": FeelsLike, \"type\": \"Feels like\", \"key\": 0},\r\n            {\"data\": main.temp_min, \"icon\": MinTemp, \"type\": \"Min Temp.\", \"key\": 1},\r\n            {\"data\": main.temp_max, \"icon\": MaxTemp, \"type\": \"Max Temp.\", \"key\": 2},\r\n            {\"data\": main.humidity, \"icon\": Humidity, \"type\": \"Humidity\", \"key\": 3},\r\n            {\"data\": response.visibility, \"icon\": Frame, \"type\": \"Visibility\", \"key\": 4},\r\n            {\"data\": response.wind.speed, \"icon\": Wind, \"type\": \"Wind\", \"key\": 5}\r\n          ]);\r\n          setTemperature(main.temp);\r\n          setDescription(response.weather[0].description);\r\n          setCityName(response.name);\r\n          console.log(response.name);\r\n        })\r\n        .catch(() =>{\r\n          alert(`Your query [${city}] did not throw any results`);\r\n          changeCity()\r\n        })\r\n        .finally(() => setLoading(false));\r\n\r\n  },[city, geoLocation]);\r\n\r\n\r\n  const { unitsArray, temperature: temperatureData } = UnitPicker(units, temperature);\r\n\r\n  const handleChange = (e: any) => setUnits(e.target.value);\r\n\r\n\r\n  const hideSettings = () => {\r\n    setVisible(\"hidden\");\r\n  }\r\n\r\n  const showSettings = () => setVisible(\"shown\")\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"head\">\r\n      <h1>{`${Math.ceil(temperatureData)} ${unitsArray[0]}`}</h1>\r\n      <h2>{`${description} in ${cityName !== \"\" ? cityName : city}`}</h2>\r\n      <button id=\"setting\" onClick={showSettings}>\r\n        <img src={settingsIcon} alt=\"\"/>\r\n      </button>\r\n      </div>\r\n      <div className=\"forecast\">\r\n        {forecast.map(data => (\r\n          <WeatherInfo\r\n            number={data.data}\r\n            icon={data.icon}\r\n            type={data.type}\r\n            key={data.key}\r\n            unit={unitsArray[data.key]}\r\n          />\r\n        ))}\r\n        {\r\n          visible === \"shown\" ?\r\n            <div className={`container-${visible}`} >\r\n              <SettingsPrompt\r\n                visible={`settings-${visible}`}\r\n                handleChange={handleChange}\r\n                changeCity={changeCity}\r\n                hideSettings={hideSettings}\r\n              />\r\n            </div>\r\n            : null\r\n        }\r\n        {\r\n          loading ?\r\n            <div className=\"loading-container\">\r\n              <Loading />\r\n            </div>\r\n            : null\r\n        }\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default WeatherForecast;\r\n","export default function UnitPicker(units: string, temp: number) {\n\n  const temperatureDataObject = {\n    unitsArray: [\"\"],\n    temperature: 0,\n  };\n\n  switch (units) {\n    case \"metric\":\n      temperatureDataObject.unitsArray = [\"°C\", \"°C\", \"°C\", \"%\", \"m\", \"km/h\"];\n      temperatureDataObject.temperature = temp;\n      break;\n    case \"imperial\":\n      temperatureDataObject.unitsArray = [\"°F\", \"°F\", \"°F\", \"%\", \"m\", \"mph\"];\n      temperatureDataObject.temperature = (temp * (9 / 5) + 32);\n      break;\n    default:\n      temperatureDataObject.unitsArray = [\"K\", \"K\", \"K\", \"%\", \"m\", \"m/s\"];\n      temperatureDataObject.temperature = (temp + 273.15);\n      break;\n  }\n  return temperatureDataObject;\n}\n","import React from \"react\";\r\n\r\n// @ts-ignore\r\nconst SearchBox = ({visibility, handleSearch, city, handleSubmit}) => {\r\n  return(\r\n    <form className={visibility} onSubmit={handleSubmit}>\r\n      <label htmlFor=\"city-search\">Search a city (city-comma-country)</label><br/>\r\n      <input type=\"text\" name=\"citySearch\" id=\"city-search\" onChange={handleSearch} value={city}/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport WeatherForecast from \"./weatherForecast\";\r\nimport SearchBox from \"./searchBox\";\r\n\r\nfunction App() {\r\n  const [ location, setLocation ] = useState({lat: 0, lon: 0});\r\n  const [ city, setCity] = useState({cityName: \"\"});\r\n  const [ visibility, setVisibility ] = useState(\"shown\");\r\n  const [ styleClass, setStyleClass ] = useState([\"App\", \"opaque\"]);\r\n  const geoLocate = () => {\r\n\r\n    const locate = (position: GeolocationPosition) => {\r\n      let latitude = position.coords.latitude;\r\n      let longitude = position.coords.longitude;\r\n      setLocation({lat: latitude, lon: longitude});\r\n      setCity({cityName: \"\"});\r\n      setVisibility(\"hidden\");\r\n      setStyleClass([\"App2\", \"opaque2\"]);\r\n      console.log(location);\r\n    }\r\n\r\n    const error = () => console.error(\"unable to locate\");\r\n\r\n    if(!navigator.geolocation) {\r\n      console.error(\"Geolocation unsupported\");\r\n      // @ts-ignore\r\n      setLocation({lat: null, lon: null});\r\n    } else {\r\n      navigator.geolocation.getCurrentPosition(locate, error);\r\n    }\r\n\r\n  }\r\n\r\n  const handleSearch = (e: any) => {\r\n    setCity({cityName: e.target.value});\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if(city.cityName === \"\") {\r\n      alert(\"The search box cannot be empty!\");\r\n    } else {\r\n      setVisibility(\"hidden\");\r\n      setStyleClass([\"App2\", \"opaque2\"]);\r\n      // @ts-ignore\r\n      setLocation({lat: null, lon: null});\r\n    }\r\n  }\r\n\r\n  const changeCity = () => {\r\n    setVisibility(\"shown\");\r\n    setStyleClass([\"App\", \"opaque\"]);\r\n  }\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div className={styleClass[0]}>\r\n      <div className={styleClass[1]}>\r\n        <h1 className={visibility}>Pick a city to start</h1>\r\n        <SearchBox\r\n          visibility={visibility}\r\n          handleSearch={handleSearch}\r\n          city={city.cityName}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n        <button className={visibility} onClick={handleClick}>Search</button>\r\n        <button onClick={() => geoLocate()} className={visibility}>Use geolocation instead</button>\r\n        {visibility === \"hidden\"\r\n          ? <WeatherForecast  city={city.cityName} geoLocation={location} changeCity={changeCity} />\r\n          : null\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}